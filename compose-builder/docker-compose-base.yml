# /*******************************************************************************
#  * Copyright 2020 Redis Labs Inc.
#  * Copyright 2024 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *******************************************************************************/

# NOTE:  this Docker Compose file does not contain the security services required to run in secure mode

version: '3.7'

networks:
  edgex-network:
    driver: "bridge"

volumes:
  db-data:
  postgres-data:
  consul-config:
  consul-data:
  kuiper-data:
  kuiper-etc:
  kuiper-log:
  kuiper-plugins:

services:
  consul:
    image: hashicorp/consul:${CONSUL_VERSION}
    command: "agent -ui -bootstrap -server -client 0.0.0.0"
    user: "root:root" # Note that Consul is run under the 'consul' user, but entry point scripts need to first run as root
    ports:
      - "127.0.0.1:8500:8500"
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    read_only: true
    restart: always
    networks:
      edgex-network:
    volumes:
      - consul-config:/consul/config
      - consul-data:/consul/data
    security_opt:
      - no-new-privileges:true

  database:
    image: redis:${REDIS_VERSION}
    user: "root:root" # Note that Redis is run under the 'redis' user, but entry point scripts need to first run as root
    ports:
      - "127.0.0.1:6379:6379"
    container_name: edgex-redis
    hostname: edgex-redis
    read_only: true
    restart: always
    networks:
      - edgex-network
    volumes:
      - db-data:/data
    security_opt:
      - no-new-privileges:true

  support-notifications:
    image: ${CORE_EDGEX_REPOSITORY}/support-notifications${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59860:59860"
    container_name: edgex-support-notifications
    hostname: edgex-support-notifications
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-support-notifications
    depends_on:
      - consul
      - database
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  core-metadata:
    image: ${CORE_EDGEX_REPOSITORY}/core-metadata${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59881:59881"
    container_name: edgex-core-metadata
    hostname: edgex-core-metadata
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-core-metadata
    depends_on:
      - consul
      - database
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  core-data:
    image: ${CORE_EDGEX_REPOSITORY}/core-data${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59880:59880"
    container_name: edgex-core-data
    hostname: edgex-core-data
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-core-data
    depends_on:
      - consul
      - database
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  core-command:
    image: ${CORE_EDGEX_REPOSITORY}/core-command${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59882:59882"
    container_name: edgex-core-command
    hostname: edgex-core-command
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-core-command
      EXTERNALMQTT_URL: tcp://edgex-mqtt-broker:1883
    depends_on:
      - consul
      - database
      - core-metadata
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  core-common-config-bootstrapper:
    image: ${CORE_EDGEX_REPOSITORY}/core-common-config-bootstrapper${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    container_name: edgex-core-common-config-bootstrapper
    hostname: edgex-core-common-config-bootstrapper
    read_only: true
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      ALL_SERVICES_REGISTRY_HOST: edgex-core-consul
      ALL_SERVICES_DATABASE_HOST: edgex-redis
      ALL_SERVICES_MESSAGEBUS_HOST: edgex-redis
      APP_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      DEVICE_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
    depends_on:
      - consul
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  support-scheduler:
    image: ${CORE_EDGEX_REPOSITORY}/support-scheduler${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59861:59861"
    container_name: edgex-support-scheduler
    hostname: edgex-support-scheduler
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-support-scheduler
      INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
      INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
    depends_on:
      - consul
      - database
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  postgres:
    image: postgres:latest
    user: "root:root"
    ports:
      - "127.0.0.1:5432:5432"
    container_name: edgex-postgres
    hostname: edgex-postgres
    restart: always
    networks:
      - edgex-network
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: edgex_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    security_opt:
      - no-new-privileges:true

  support-cron-scheduler:
    image: ${CORE_EDGEX_REPOSITORY}/support-cron-scheduler${ARCH}:${CORE_EDGEX_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59863:59863"
    container_name: edgex-support-cron-scheduler
    hostname: edgex-support-cron-scheduler
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      SERVICE_HOST: edgex-support-cron-scheduler
      DATABASE_HOST: edgex-postgres
    depends_on:
      - consul
      - database
      - postgres
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  app-rules-engine:
    image: ${APP_SVC_REPOSITORY}/app-service-configurable${ARCH}:${APP_SERVICE_CONFIG_VERSION}
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    ports:
      - "127.0.0.1:59701:59701"
    container_name: edgex-app-rules-engine
    hostname: edgex-app-rules-engine
    read_only: true
    restart: always
    networks:
      - edgex-network
    env_file:
      - common-non-security.env
    environment:
      EDGEX_PROFILE: rules-engine
      SERVICE_HOST: edgex-app-rules-engine
    depends_on:
      - consul
      - core-metadata
      - core-common-config-bootstrapper
    security_opt:
      - no-new-privileges:true
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro

  rules-engine:
    image: lfedge/ekuiper:${KUIPER_VERSION}
    user: "kuiper:kuiper"
    ports:
      - "127.0.0.1:59720:59720"
    container_name: edgex-kuiper
    hostname: edgex-kuiper
    read_only: true
    restart: always
    networks:
      - edgex-network
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro
      - kuiper-data:/kuiper/data
      - kuiper-etc:/kuiper/etc
      - kuiper-log:/kuiper/log
      - kuiper-plugins:/kuiper/plugins
    environment:
#      KUIPER__BASIC__DEBUG: "true"
      KUIPER__BASIC__CONSOLELOG: "true"
      KUIPER__BASIC__ENABLEOPENZITI: false
      KUIPER__BASIC__RESTPORT: 59720
      CONNECTION__EDGEX__REDISMSGBUS__PORT: 6379
      CONNECTION__EDGEX__REDISMSGBUS__PROTOCOL: redis
      CONNECTION__EDGEX__REDISMSGBUS__SERVER: edgex-redis
      CONNECTION__EDGEX__REDISMSGBUS__TYPE: redis
      EDGEX__DEFAULT__PORT: 6379
      EDGEX__DEFAULT__PROTOCOL: redis
      EDGEX__DEFAULT__SERVER: edgex-redis
      EDGEX__DEFAULT__TYPE: redis
      EDGEX__DEFAULT__TOPIC: edgex/rules-events
    depends_on:
      - database
    security_opt:
      - no-new-privileges:true

  ui:
    image: ${UI_REPOSITORY}/edgex-ui${ARCH}:${EDGEX_UI_VERSION}
    ports:
      - "4000:4000"
    container_name: edgex-ui-go
    hostname: edgex-ui-go
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-ui-go
    read_only: true
    restart: always
    networks:
      - edgex-network
    security_opt:
      - no-new-privileges:true
    user: "${EDGEX_USER}:${EDGEX_GROUP}"
    volumes:
      # use host timezone
      - /etc/localtime:/etc/localtime:ro
